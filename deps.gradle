apply from: "${project.rootDir}/versions.gradle"

def printVersions = false

def requiredGradleVersion = new File("${project.rootDir}/gradleVersion").text.split('-')[1].trim()
if ("${gradle.gradleVersion}" != "$requiredGradleVersion") {
  print "WARNING: Gradle version $requiredGradleVersion is required. Detected Gradle version ${gradle.gradleVersion}"
}

ext {
  androidPlugin = "com.android.tools.build:gradle:$ANDROID_PLUGIN_VERSION"
  kotlinPlugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION"
  sonarqubePlugin = "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:$SONARQUBE_VERSION"
  firebasePlugin = "com.google.firebase:firebase-crashlytics-gradle:$FIREBASE_PLUGIN_VERSION"
  hiltPlugin = "com.google.dagger:hilt-android-gradle-plugin:$HILT_VERSION"
  heapPlugin = "com.heapanalytics.android:heap-android-gradle:$HEAP_VERSION"
}

if (printVersions) {
  def gradleVersions = gradle.gradleVersion.split('\\.')
  def gradleMajorVersion = gradleVersions[0].toInteger()
  def gradleMinorVersion = gradleVersions[1].toInteger()
  def gradleMaintenanceVersion = 0
  if (gradleVersions.length >= 3) {
    gradleMaintenanceVersion = gradleVersions[2].toInteger()
  }

  println "gradleMajorVersion = " + gradleMajorVersion
  println "gradleMinorVersion = " + gradleMinorVersion
  println "gradleMaintenanceVersion = " + gradleMaintenanceVersion
  println "androidPlugin = " + androidPlugin
  println "kotlinPlugin = " + kotlinPlugin
  println "sonarqubePlugin = " + sonarqubePlugin
  println "firebasePlugin = " + firebasePlugin
}

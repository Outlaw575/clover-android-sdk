/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

/*
 * Copyright (C) 2019 Clover Network, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.clover.sdk.v3.payments;


import com.clover.sdk.GenericClient;
import com.clover.sdk.GenericParcelable;

/**
 * This is an auto-generated Clover data object.
 * <p>
 * <h3>Fields</h3>
 * <ul>
 * <li>{@link #getInstallmentPlanId installmentPlanId}</li>
 * <li>{@link #getInstallmentPlanInquiryId installmentPlanInquiryId}</li>
 * <li>{@link #getIslamicPlan islamicPlan}</li>
 * <li>{@link #getInstallmentPlanIdReference installmentPlanIdReference}</li>
 * <li>{@link #getProvider provider}</li>
 * <li>{@link #getTenure tenure}</li>
 * <li>{@link #getInstallmentMerchantId installmentMerchantId}</li>
 * <li>{@link #getInstallmentTerminalId installmentTerminalId}</li>
 * <li>{@link #getInterestRate interestRate}</li>
 * <li>{@link #getCurrency currency}</li>
 * <li>{@link #getInstallmentFee installmentFee}</li>
 * <li>{@link #getTotalFee totalFee}</li>
 * <li>{@link #getAmountPerInstallment amountPerInstallment}</li>
 * <li>{@link #getTotalAmount totalAmount}</li>
 * <li>{@link #getProductCode productCode}</li>
 * <li>{@link #getProgramCode programCode}</li>
 * <li>{@link #getLanguageCode languageCode}</li>
 * <li>{@link #getTermsAndConditionText termsAndConditionText}</li>
 * <li>{@link #getTermsAndConditionVersion TermsAndConditionVersion}</li>
 * <li>{@link #getAdditionalTermsAndConditionsURL additionalTermsAndConditionsURL}</li>
 * <li>{@link #getBank bank}</li>
 * </ul>
 */
@SuppressWarnings("all")
public class InstallmentPlan extends GenericParcelable implements com.clover.sdk.v3.Validator, com.clover.sdk.JSONifiable {

  /**
   * Plan id related to the VISA InstallmentPaymentPlan
   */
  public java.lang.String getInstallmentPlanId() {
    return genClient.cacheGet(CacheKey.installmentPlanId);
  }

  /**
   * Plan Inquiry Id
   */
  public java.lang.Long getInstallmentPlanInquiryId() {
    return genClient.cacheGet(CacheKey.installmentPlanInquiryId);
  }

  /**
   * Returns whether plan is islamicPlan or not
   */
  public java.lang.Boolean getIslamicPlan() {
    return genClient.cacheGet(CacheKey.islamicPlan);
  }

  /**
   * Plan Id reference
   */
  public java.lang.String getInstallmentPlanIdReference() {
    return genClient.cacheGet(CacheKey.installmentPlanIdReference);
  }

  /**
   * Service provider of the installment plan
   */
  public java.lang.String getProvider() {
    return genClient.cacheGet(CacheKey.provider);
  }

  /**
   * No of months, the EMI services are being offered for. Min: 1, Max: 1000
   */
  public java.lang.String getTenure() {
    return genClient.cacheGet(CacheKey.tenure);
  }

  /**
   * Expected if provider is SCB, optional for VISA provider
   */
  public java.lang.String getInstallmentMerchantId() {
    return genClient.cacheGet(CacheKey.installmentMerchantId);
  }

  /**
   * Expected if provider is SCB
   */
  public java.lang.String getInstallmentTerminalId() {
    return genClient.cacheGet(CacheKey.installmentTerminalId);
  }

  /**
   * Interest rate for the EMI services provided
   */
  public java.lang.String getInterestRate() {
    return genClient.cacheGet(CacheKey.interestRate);
  }

  /**
   * Currency code. 3 char ISO alpha code
   */
  public java.lang.String getCurrency() {
    return genClient.cacheGet(CacheKey.currency);
  }

  /**
   * Processing fee levied by the Issuer
   */
  public java.lang.String getInstallmentFee() {
    return genClient.cacheGet(CacheKey.installmentFee);
  }

  /**
   * This is the complete set of fees which includes, recurring , processing, upfront fees etc
   */
  public java.lang.String getTotalFee() {
    return genClient.cacheGet(CacheKey.totalFee);
  }

  /**
   * The complete EMI amount per month the customer will have to pay including fees and other charges.
   */
  public java.lang.String getAmountPerInstallment() {
    return genClient.cacheGet(CacheKey.amountPerInstallment);
  }

  /**
   * Total amount payable by the customer for the product purchased under the EMI scheme, including the interest and other fees along with the principal.
   */
  public java.lang.String getTotalAmount() {
    return genClient.cacheGet(CacheKey.totalAmount);
  }

  /**
   * Bank defined EMI product code, for individual EMIs. Only applicable for SCB service provider. 
   */
  public java.lang.String getProductCode() {
    return genClient.cacheGet(CacheKey.productCode);
  }

  /**
   * Bank defined EMI program code, for individual EMIs. Only applicable for SCB service provider. 
   */
  public java.lang.String getProgramCode() {
    return genClient.cacheGet(CacheKey.programCode);
  }

  /**
   * Applicable only for VIS. Language of the information being passed. 
   */
  public java.lang.String getLanguageCode() {
    return genClient.cacheGet(CacheKey.languageCode);
  }

  /**
   * Applicable only for VIS. T & C to be displayed and acknowledged by the customer. 
   */
  public java.lang.String getTermsAndConditionText() {
    return genClient.cacheGet(CacheKey.termsAndConditionText);
  }

  /**
   * Applicable only for VIS. Version of T & C being shared from the Installment service provider. 
   */
  public java.lang.String getTermsAndConditionVersion() {
    return genClient.cacheGet(CacheKey.TermsAndConditionVersion);
  }

  /**
   * Applicable only for VIS. Additional URL of the T & C being shared from the Installment service provider. 
   */
  public java.lang.String getAdditionalTermsAndConditionsURL() {
    return genClient.cacheGet(CacheKey.additionalTermsAndConditionsURL);
  }

  public com.clover.sdk.v3.payments.Bank getBank() {
    return genClient.cacheGet(CacheKey.bank);
  }




  private enum CacheKey implements com.clover.sdk.ExtractionStrategyEnum {
    installmentPlanId
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    installmentPlanInquiryId
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Long.class)),
    islamicPlan
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.Boolean.class)),
    installmentPlanIdReference
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    provider
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    tenure
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    installmentMerchantId
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    installmentTerminalId
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    interestRate
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    currency
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    installmentFee
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    totalFee
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    amountPerInstallment
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    totalAmount
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    productCode
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    programCode
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    languageCode
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    termsAndConditionText
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    TermsAndConditionVersion
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    additionalTermsAndConditionsURL
        (com.clover.sdk.extractors.BasicExtractionStrategy.instance(java.lang.String.class)),
    bank
        (com.clover.sdk.extractors.RecordExtractionStrategy.instance(com.clover.sdk.v3.payments.Bank.JSON_CREATOR)),
      ;

    private final com.clover.sdk.extractors.ExtractionStrategy extractionStrategy;

    private CacheKey(com.clover.sdk.extractors.ExtractionStrategy s) {
      extractionStrategy = s;
    }

    @Override
    public com.clover.sdk.extractors.ExtractionStrategy getExtractionStrategy() {
      return extractionStrategy;
    }
  }

  private final GenericClient<InstallmentPlan> genClient;

  /**
   * Constructs a new empty instance.
   */
  public InstallmentPlan() {
    genClient = new GenericClient<InstallmentPlan>(this);
  }

  @Override
  protected GenericClient getGenericClient() {
    return genClient;
  }

  /**
   * Constructs a new empty instance.
   */
  protected InstallmentPlan(boolean noInit) {
    genClient = null;
  }

  /**
   * Constructs a new instance from the given JSON String.
   */
  public InstallmentPlan(String json) throws IllegalArgumentException {
    this();
    genClient.initJsonObject(json);
  }

  /**
   * Construct a new instance backed by the given JSONObject, the parameter is not copied so changes to it will be
   * reflected in this instance and vice-versa.
   */
  public InstallmentPlan(org.json.JSONObject jsonObject) {
    this();
    genClient.setJsonObject(jsonObject);
  }

  /**
   * Constructs a new instance that is a deep copy of the source instance. It does not copy the bundle or changelog.
   */
  public InstallmentPlan(InstallmentPlan src) {
    this();
    if (src.genClient.getJsonObject() != null) {
      genClient.setJsonObject(com.clover.sdk.v3.JsonHelper.deepCopy(src.genClient.getJSONObject()));
    }
  }

  /**
   * Returns the internal JSONObject backing this instance, the return value is not a copy so changes to it will be
   * reflected in this instance and vice-versa.
   */
  public org.json.JSONObject getJSONObject() {
    return genClient.getJSONObject();
  }

  @Override
  public void validate() {
    genClient.validateLength(CacheKey.installmentPlanId, getInstallmentPlanId(), 36);

    genClient.validateLength(CacheKey.installmentPlanIdReference, getInstallmentPlanIdReference(), 36);

    genClient.validateLength(CacheKey.provider, getProvider(), 20);

    genClient.validateLength(CacheKey.tenure, getTenure(), 4);

    genClient.validateLength(CacheKey.installmentMerchantId, getInstallmentMerchantId(), 15);

    genClient.validateLength(CacheKey.installmentTerminalId, getInstallmentTerminalId(), 16);

    genClient.validateLength(CacheKey.interestRate, getInterestRate(), 10);

    genClient.validateLength(CacheKey.currency, getCurrency(), 3);

    genClient.validateLength(CacheKey.installmentFee, getInstallmentFee(), 13);

    genClient.validateLength(CacheKey.totalFee, getTotalFee(), 13);

    genClient.validateLength(CacheKey.amountPerInstallment, getAmountPerInstallment(), 13);

    genClient.validateLength(CacheKey.totalAmount, getTotalAmount(), 13);

    genClient.validateLength(CacheKey.productCode, getProductCode(), 4);

    genClient.validateLength(CacheKey.programCode, getProgramCode(), 6);

    genClient.validateLength(CacheKey.languageCode, getLanguageCode(), 3);

    genClient.validateLength(CacheKey.termsAndConditionText, getTermsAndConditionText(), 2000);

    genClient.validateLength(CacheKey.TermsAndConditionVersion, getTermsAndConditionVersion(), 10);

    genClient.validateLength(CacheKey.additionalTermsAndConditionsURL, getAdditionalTermsAndConditionsURL(), 1000);
  }

  /** Checks whether the 'installmentPlanId' field is set and is not null */
  public boolean isNotNullInstallmentPlanId() {
    return genClient.cacheValueIsNotNull(CacheKey.installmentPlanId);
  }

  /** Checks whether the 'installmentPlanInquiryId' field is set and is not null */
  public boolean isNotNullInstallmentPlanInquiryId() {
    return genClient.cacheValueIsNotNull(CacheKey.installmentPlanInquiryId);
  }

  /** Checks whether the 'islamicPlan' field is set and is not null */
  public boolean isNotNullIslamicPlan() {
    return genClient.cacheValueIsNotNull(CacheKey.islamicPlan);
  }

  /** Checks whether the 'installmentPlanIdReference' field is set and is not null */
  public boolean isNotNullInstallmentPlanIdReference() {
    return genClient.cacheValueIsNotNull(CacheKey.installmentPlanIdReference);
  }

  /** Checks whether the 'provider' field is set and is not null */
  public boolean isNotNullProvider() {
    return genClient.cacheValueIsNotNull(CacheKey.provider);
  }

  /** Checks whether the 'tenure' field is set and is not null */
  public boolean isNotNullTenure() {
    return genClient.cacheValueIsNotNull(CacheKey.tenure);
  }

  /** Checks whether the 'installmentMerchantId' field is set and is not null */
  public boolean isNotNullInstallmentMerchantId() {
    return genClient.cacheValueIsNotNull(CacheKey.installmentMerchantId);
  }

  /** Checks whether the 'installmentTerminalId' field is set and is not null */
  public boolean isNotNullInstallmentTerminalId() {
    return genClient.cacheValueIsNotNull(CacheKey.installmentTerminalId);
  }

  /** Checks whether the 'interestRate' field is set and is not null */
  public boolean isNotNullInterestRate() {
    return genClient.cacheValueIsNotNull(CacheKey.interestRate);
  }

  /** Checks whether the 'currency' field is set and is not null */
  public boolean isNotNullCurrency() {
    return genClient.cacheValueIsNotNull(CacheKey.currency);
  }

  /** Checks whether the 'installmentFee' field is set and is not null */
  public boolean isNotNullInstallmentFee() {
    return genClient.cacheValueIsNotNull(CacheKey.installmentFee);
  }

  /** Checks whether the 'totalFee' field is set and is not null */
  public boolean isNotNullTotalFee() {
    return genClient.cacheValueIsNotNull(CacheKey.totalFee);
  }

  /** Checks whether the 'amountPerInstallment' field is set and is not null */
  public boolean isNotNullAmountPerInstallment() {
    return genClient.cacheValueIsNotNull(CacheKey.amountPerInstallment);
  }

  /** Checks whether the 'totalAmount' field is set and is not null */
  public boolean isNotNullTotalAmount() {
    return genClient.cacheValueIsNotNull(CacheKey.totalAmount);
  }

  /** Checks whether the 'productCode' field is set and is not null */
  public boolean isNotNullProductCode() {
    return genClient.cacheValueIsNotNull(CacheKey.productCode);
  }

  /** Checks whether the 'programCode' field is set and is not null */
  public boolean isNotNullProgramCode() {
    return genClient.cacheValueIsNotNull(CacheKey.programCode);
  }

  /** Checks whether the 'languageCode' field is set and is not null */
  public boolean isNotNullLanguageCode() {
    return genClient.cacheValueIsNotNull(CacheKey.languageCode);
  }

  /** Checks whether the 'termsAndConditionText' field is set and is not null */
  public boolean isNotNullTermsAndConditionText() {
    return genClient.cacheValueIsNotNull(CacheKey.termsAndConditionText);
  }

  /** Checks whether the 'TermsAndConditionVersion' field is set and is not null */
  public boolean isNotNullTermsAndConditionVersion() {
    return genClient.cacheValueIsNotNull(CacheKey.TermsAndConditionVersion);
  }

  /** Checks whether the 'additionalTermsAndConditionsURL' field is set and is not null */
  public boolean isNotNullAdditionalTermsAndConditionsURL() {
    return genClient.cacheValueIsNotNull(CacheKey.additionalTermsAndConditionsURL);
  }

  /** Checks whether the 'bank' field is set and is not null */
  public boolean isNotNullBank() {
    return genClient.cacheValueIsNotNull(CacheKey.bank);
  }



  /** Checks whether the 'installmentPlanId' field has been set, however the value could be null */
  public boolean hasInstallmentPlanId() {
    return genClient.cacheHasKey(CacheKey.installmentPlanId);
  }

  /** Checks whether the 'installmentPlanInquiryId' field has been set, however the value could be null */
  public boolean hasInstallmentPlanInquiryId() {
    return genClient.cacheHasKey(CacheKey.installmentPlanInquiryId);
  }

  /** Checks whether the 'islamicPlan' field has been set, however the value could be null */
  public boolean hasIslamicPlan() {
    return genClient.cacheHasKey(CacheKey.islamicPlan);
  }

  /** Checks whether the 'installmentPlanIdReference' field has been set, however the value could be null */
  public boolean hasInstallmentPlanIdReference() {
    return genClient.cacheHasKey(CacheKey.installmentPlanIdReference);
  }

  /** Checks whether the 'provider' field has been set, however the value could be null */
  public boolean hasProvider() {
    return genClient.cacheHasKey(CacheKey.provider);
  }

  /** Checks whether the 'tenure' field has been set, however the value could be null */
  public boolean hasTenure() {
    return genClient.cacheHasKey(CacheKey.tenure);
  }

  /** Checks whether the 'installmentMerchantId' field has been set, however the value could be null */
  public boolean hasInstallmentMerchantId() {
    return genClient.cacheHasKey(CacheKey.installmentMerchantId);
  }

  /** Checks whether the 'installmentTerminalId' field has been set, however the value could be null */
  public boolean hasInstallmentTerminalId() {
    return genClient.cacheHasKey(CacheKey.installmentTerminalId);
  }

  /** Checks whether the 'interestRate' field has been set, however the value could be null */
  public boolean hasInterestRate() {
    return genClient.cacheHasKey(CacheKey.interestRate);
  }

  /** Checks whether the 'currency' field has been set, however the value could be null */
  public boolean hasCurrency() {
    return genClient.cacheHasKey(CacheKey.currency);
  }

  /** Checks whether the 'installmentFee' field has been set, however the value could be null */
  public boolean hasInstallmentFee() {
    return genClient.cacheHasKey(CacheKey.installmentFee);
  }

  /** Checks whether the 'totalFee' field has been set, however the value could be null */
  public boolean hasTotalFee() {
    return genClient.cacheHasKey(CacheKey.totalFee);
  }

  /** Checks whether the 'amountPerInstallment' field has been set, however the value could be null */
  public boolean hasAmountPerInstallment() {
    return genClient.cacheHasKey(CacheKey.amountPerInstallment);
  }

  /** Checks whether the 'totalAmount' field has been set, however the value could be null */
  public boolean hasTotalAmount() {
    return genClient.cacheHasKey(CacheKey.totalAmount);
  }

  /** Checks whether the 'productCode' field has been set, however the value could be null */
  public boolean hasProductCode() {
    return genClient.cacheHasKey(CacheKey.productCode);
  }

  /** Checks whether the 'programCode' field has been set, however the value could be null */
  public boolean hasProgramCode() {
    return genClient.cacheHasKey(CacheKey.programCode);
  }

  /** Checks whether the 'languageCode' field has been set, however the value could be null */
  public boolean hasLanguageCode() {
    return genClient.cacheHasKey(CacheKey.languageCode);
  }

  /** Checks whether the 'termsAndConditionText' field has been set, however the value could be null */
  public boolean hasTermsAndConditionText() {
    return genClient.cacheHasKey(CacheKey.termsAndConditionText);
  }

  /** Checks whether the 'TermsAndConditionVersion' field has been set, however the value could be null */
  public boolean hasTermsAndConditionVersion() {
    return genClient.cacheHasKey(CacheKey.TermsAndConditionVersion);
  }

  /** Checks whether the 'additionalTermsAndConditionsURL' field has been set, however the value could be null */
  public boolean hasAdditionalTermsAndConditionsURL() {
    return genClient.cacheHasKey(CacheKey.additionalTermsAndConditionsURL);
  }

  /** Checks whether the 'bank' field has been set, however the value could be null */
  public boolean hasBank() {
    return genClient.cacheHasKey(CacheKey.bank);
  }


  /**
   * Sets the field 'installmentPlanId'.
   */
  public InstallmentPlan setInstallmentPlanId(java.lang.String installmentPlanId) {
    return genClient.setOther(installmentPlanId, CacheKey.installmentPlanId);
  }

  /**
   * Sets the field 'installmentPlanInquiryId'.
   */
  public InstallmentPlan setInstallmentPlanInquiryId(java.lang.Long installmentPlanInquiryId) {
    return genClient.setOther(installmentPlanInquiryId, CacheKey.installmentPlanInquiryId);
  }

  /**
   * Sets the field 'islamicPlan'.
   */
  public InstallmentPlan setIslamicPlan(java.lang.Boolean islamicPlan) {
    return genClient.setOther(islamicPlan, CacheKey.islamicPlan);
  }

  /**
   * Sets the field 'installmentPlanIdReference'.
   */
  public InstallmentPlan setInstallmentPlanIdReference(java.lang.String installmentPlanIdReference) {
    return genClient.setOther(installmentPlanIdReference, CacheKey.installmentPlanIdReference);
  }

  /**
   * Sets the field 'provider'.
   */
  public InstallmentPlan setProvider(java.lang.String provider) {
    return genClient.setOther(provider, CacheKey.provider);
  }

  /**
   * Sets the field 'tenure'.
   */
  public InstallmentPlan setTenure(java.lang.String tenure) {
    return genClient.setOther(tenure, CacheKey.tenure);
  }

  /**
   * Sets the field 'installmentMerchantId'.
   */
  public InstallmentPlan setInstallmentMerchantId(java.lang.String installmentMerchantId) {
    return genClient.setOther(installmentMerchantId, CacheKey.installmentMerchantId);
  }

  /**
   * Sets the field 'installmentTerminalId'.
   */
  public InstallmentPlan setInstallmentTerminalId(java.lang.String installmentTerminalId) {
    return genClient.setOther(installmentTerminalId, CacheKey.installmentTerminalId);
  }

  /**
   * Sets the field 'interestRate'.
   */
  public InstallmentPlan setInterestRate(java.lang.String interestRate) {
    return genClient.setOther(interestRate, CacheKey.interestRate);
  }

  /**
   * Sets the field 'currency'.
   */
  public InstallmentPlan setCurrency(java.lang.String currency) {
    return genClient.setOther(currency, CacheKey.currency);
  }

  /**
   * Sets the field 'installmentFee'.
   */
  public InstallmentPlan setInstallmentFee(java.lang.String installmentFee) {
    return genClient.setOther(installmentFee, CacheKey.installmentFee);
  }

  /**
   * Sets the field 'totalFee'.
   */
  public InstallmentPlan setTotalFee(java.lang.String totalFee) {
    return genClient.setOther(totalFee, CacheKey.totalFee);
  }

  /**
   * Sets the field 'amountPerInstallment'.
   */
  public InstallmentPlan setAmountPerInstallment(java.lang.String amountPerInstallment) {
    return genClient.setOther(amountPerInstallment, CacheKey.amountPerInstallment);
  }

  /**
   * Sets the field 'totalAmount'.
   */
  public InstallmentPlan setTotalAmount(java.lang.String totalAmount) {
    return genClient.setOther(totalAmount, CacheKey.totalAmount);
  }

  /**
   * Sets the field 'productCode'.
   */
  public InstallmentPlan setProductCode(java.lang.String productCode) {
    return genClient.setOther(productCode, CacheKey.productCode);
  }

  /**
   * Sets the field 'programCode'.
   */
  public InstallmentPlan setProgramCode(java.lang.String programCode) {
    return genClient.setOther(programCode, CacheKey.programCode);
  }

  /**
   * Sets the field 'languageCode'.
   */
  public InstallmentPlan setLanguageCode(java.lang.String languageCode) {
    return genClient.setOther(languageCode, CacheKey.languageCode);
  }

  /**
   * Sets the field 'termsAndConditionText'.
   */
  public InstallmentPlan setTermsAndConditionText(java.lang.String termsAndConditionText) {
    return genClient.setOther(termsAndConditionText, CacheKey.termsAndConditionText);
  }

  /**
   * Sets the field 'TermsAndConditionVersion'.
   */
  public InstallmentPlan setTermsAndConditionVersion(java.lang.String TermsAndConditionVersion) {
    return genClient.setOther(TermsAndConditionVersion, CacheKey.TermsAndConditionVersion);
  }

  /**
   * Sets the field 'additionalTermsAndConditionsURL'.
   */
  public InstallmentPlan setAdditionalTermsAndConditionsURL(java.lang.String additionalTermsAndConditionsURL) {
    return genClient.setOther(additionalTermsAndConditionsURL, CacheKey.additionalTermsAndConditionsURL);
  }

  /**
   * Sets the field 'bank'.
   *
   * The parameter is not copied so changes to it will be reflected in this instance and vice-versa.
   */
  public InstallmentPlan setBank(com.clover.sdk.v3.payments.Bank bank) {
    return genClient.setRecord(bank, CacheKey.bank);
  }


  /** Clears the 'installmentPlanId' field, the 'has' method for this field will now return false */
  public void clearInstallmentPlanId() {
    genClient.clear(CacheKey.installmentPlanId);
  }
  /** Clears the 'installmentPlanInquiryId' field, the 'has' method for this field will now return false */
  public void clearInstallmentPlanInquiryId() {
    genClient.clear(CacheKey.installmentPlanInquiryId);
  }
  /** Clears the 'islamicPlan' field, the 'has' method for this field will now return false */
  public void clearIslamicPlan() {
    genClient.clear(CacheKey.islamicPlan);
  }
  /** Clears the 'installmentPlanIdReference' field, the 'has' method for this field will now return false */
  public void clearInstallmentPlanIdReference() {
    genClient.clear(CacheKey.installmentPlanIdReference);
  }
  /** Clears the 'provider' field, the 'has' method for this field will now return false */
  public void clearProvider() {
    genClient.clear(CacheKey.provider);
  }
  /** Clears the 'tenure' field, the 'has' method for this field will now return false */
  public void clearTenure() {
    genClient.clear(CacheKey.tenure);
  }
  /** Clears the 'installmentMerchantId' field, the 'has' method for this field will now return false */
  public void clearInstallmentMerchantId() {
    genClient.clear(CacheKey.installmentMerchantId);
  }
  /** Clears the 'installmentTerminalId' field, the 'has' method for this field will now return false */
  public void clearInstallmentTerminalId() {
    genClient.clear(CacheKey.installmentTerminalId);
  }
  /** Clears the 'interestRate' field, the 'has' method for this field will now return false */
  public void clearInterestRate() {
    genClient.clear(CacheKey.interestRate);
  }
  /** Clears the 'currency' field, the 'has' method for this field will now return false */
  public void clearCurrency() {
    genClient.clear(CacheKey.currency);
  }
  /** Clears the 'installmentFee' field, the 'has' method for this field will now return false */
  public void clearInstallmentFee() {
    genClient.clear(CacheKey.installmentFee);
  }
  /** Clears the 'totalFee' field, the 'has' method for this field will now return false */
  public void clearTotalFee() {
    genClient.clear(CacheKey.totalFee);
  }
  /** Clears the 'amountPerInstallment' field, the 'has' method for this field will now return false */
  public void clearAmountPerInstallment() {
    genClient.clear(CacheKey.amountPerInstallment);
  }
  /** Clears the 'totalAmount' field, the 'has' method for this field will now return false */
  public void clearTotalAmount() {
    genClient.clear(CacheKey.totalAmount);
  }
  /** Clears the 'productCode' field, the 'has' method for this field will now return false */
  public void clearProductCode() {
    genClient.clear(CacheKey.productCode);
  }
  /** Clears the 'programCode' field, the 'has' method for this field will now return false */
  public void clearProgramCode() {
    genClient.clear(CacheKey.programCode);
  }
  /** Clears the 'languageCode' field, the 'has' method for this field will now return false */
  public void clearLanguageCode() {
    genClient.clear(CacheKey.languageCode);
  }
  /** Clears the 'termsAndConditionText' field, the 'has' method for this field will now return false */
  public void clearTermsAndConditionText() {
    genClient.clear(CacheKey.termsAndConditionText);
  }
  /** Clears the 'TermsAndConditionVersion' field, the 'has' method for this field will now return false */
  public void clearTermsAndConditionVersion() {
    genClient.clear(CacheKey.TermsAndConditionVersion);
  }
  /** Clears the 'additionalTermsAndConditionsURL' field, the 'has' method for this field will now return false */
  public void clearAdditionalTermsAndConditionsURL() {
    genClient.clear(CacheKey.additionalTermsAndConditionsURL);
  }
  /** Clears the 'bank' field, the 'has' method for this field will now return false */
  public void clearBank() {
    genClient.clear(CacheKey.bank);
  }


  /**
   * Returns true if this instance has any changes.
   */
  public boolean containsChanges() {
    return genClient.containsChanges();
  }

  /**
   * Reset the log of changes made to this instance, calling copyChanges() after this would return an empty instance.
   */
  public void resetChangeLog() {
    genClient.resetChangeLog();
  }

  /**
   * Create a copy of this instance that contains only fields that were set after the constructor was called.
   */
  public InstallmentPlan copyChanges() {
    InstallmentPlan copy = new InstallmentPlan();
    copy.mergeChanges(this);
    copy.resetChangeLog();
    return copy;
  }

  /**
   * Copy all the changed fields from the given source to this instance.
   */
  public void mergeChanges(InstallmentPlan src) {
    if (src.genClient.getChangeLog() != null) {
      genClient.mergeChanges(new InstallmentPlan(src).getJSONObject(), src.genClient);
    }
  }

  public static final android.os.Parcelable.Creator<InstallmentPlan> CREATOR = new android.os.Parcelable.Creator<InstallmentPlan>() {
    @Override
    public InstallmentPlan createFromParcel(android.os.Parcel in) {
      InstallmentPlan instance = new InstallmentPlan(com.clover.sdk.v3.JsonParcelHelper.ObjectWrapper.CREATOR.createFromParcel(in).unwrap());
      instance.genClient.setBundle(in.readBundle(getClass().getClassLoader()));
      instance.genClient.setChangeLog(in.readBundle());
      return instance;
    }

    @Override
    public InstallmentPlan[] newArray(int size) {
      return new InstallmentPlan[size];
    }
  };

  public static final com.clover.sdk.JSONifiable.Creator<InstallmentPlan> JSON_CREATOR = new com.clover.sdk.JSONifiable.Creator<InstallmentPlan>() {
    public Class<InstallmentPlan> getCreatedClass() {
      return InstallmentPlan.class;
    }

    @Override
    public InstallmentPlan create(org.json.JSONObject jsonObject) {
      return new InstallmentPlan(jsonObject);
    }
  };

  public interface Constraints {
    public static final boolean INSTALLMENTPLANID_IS_REQUIRED = false;
    public static final long INSTALLMENTPLANID_MAX_LEN = 36;
    public static final boolean INSTALLMENTPLANINQUIRYID_IS_REQUIRED = false;
    public static final long INSTALLMENTPLANINQUIRYID_MAX_LEN = 14;
    public static final boolean ISLAMICPLAN_IS_REQUIRED = false;
    public static final boolean INSTALLMENTPLANIDREFERENCE_IS_REQUIRED = false;
    public static final long INSTALLMENTPLANIDREFERENCE_MAX_LEN = 36;
    public static final boolean PROVIDER_IS_REQUIRED = false;
    public static final long PROVIDER_MAX_LEN = 20;
    public static final boolean TENURE_IS_REQUIRED = false;
    public static final long TENURE_MAX_LEN = 4;
    public static final boolean INSTALLMENTMERCHANTID_IS_REQUIRED = false;
    public static final long INSTALLMENTMERCHANTID_MAX_LEN = 15;
    public static final boolean INSTALLMENTTERMINALID_IS_REQUIRED = false;
    public static final long INSTALLMENTTERMINALID_MAX_LEN = 16;
    public static final boolean INTERESTRATE_IS_REQUIRED = false;
    public static final long INTERESTRATE_MAX_LEN = 10;
    public static final boolean CURRENCY_IS_REQUIRED = false;
    public static final long CURRENCY_MAX_LEN = 3;
    public static final boolean INSTALLMENTFEE_IS_REQUIRED = false;
    public static final long INSTALLMENTFEE_MAX_LEN = 13;
    public static final boolean TOTALFEE_IS_REQUIRED = false;
    public static final long TOTALFEE_MAX_LEN = 13;
    public static final boolean AMOUNTPERINSTALLMENT_IS_REQUIRED = false;
    public static final long AMOUNTPERINSTALLMENT_MAX_LEN = 13;
    public static final boolean TOTALAMOUNT_IS_REQUIRED = false;
    public static final long TOTALAMOUNT_MAX_LEN = 13;
    public static final boolean PRODUCTCODE_IS_REQUIRED = false;
    public static final long PRODUCTCODE_MAX_LEN = 4;
    public static final boolean PROGRAMCODE_IS_REQUIRED = false;
    public static final long PROGRAMCODE_MAX_LEN = 6;
    public static final boolean LANGUAGECODE_IS_REQUIRED = false;
    public static final long LANGUAGECODE_MAX_LEN = 3;
    public static final boolean TERMSANDCONDITIONTEXT_IS_REQUIRED = false;
    public static final long TERMSANDCONDITIONTEXT_MAX_LEN = 2000;
    public static final boolean TERMSANDCONDITIONVERSION_IS_REQUIRED = false;
    public static final long TERMSANDCONDITIONVERSION_MAX_LEN = 10;
    public static final boolean ADDITIONALTERMSANDCONDITIONSURL_IS_REQUIRED = false;
    public static final long ADDITIONALTERMSANDCONDITIONSURL_MAX_LEN = 1000;
    public static final boolean BANK_IS_REQUIRED = false;
  }

}
